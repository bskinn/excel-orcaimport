Attribute VB_Name = "XYZ"
'-------------------------------------------------------------------------------
' Name:        XYZ (Module)
' Purpose:     UDFs &c. providing access to memoized ORCA_XYZ properties
'
' Author:      Brian Skinn
'                bskinn@alum.mit.edu
'
' Created:     10 May 2016
' Copyright:   (c) Brian Skinn 2016
' License:     The MIT License; see "license.txt" for full license terms
'                   and contributor agreement.
'
'       This file is part of ORCA Importer, an Excel VBA add-in providing
'       memoized import functionality for output generated by the ORCA
'       quantum chemistry software program package
'       (http://orcaforum.cec.mpg.de).
'
'       http://www.github.com/bskinn/excel-orcaimport
'
'-------------------------------------------------------------------------------

Option Explicit
Option Base 1

Dim mXYZ As New MemoXYZ


Public Function XYZCoords(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the 3NxG coordinates array or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZCoords = retObj.atomCoordsArray
    Else
        XYZCoords = retObj.StrValue
    End If
    
End Function

Public Function XYZNumAtoms(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the Long number of atoms or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZNumAtoms = retObj.numOfAtoms
    Else
        XYZNumAtoms = retObj.StrValue
    End If
    
End Function

Public Function XYZNumGeoms(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the Long number of geometries or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZNumGeoms = retObj.numOfGeoms
    Else
        XYZNumGeoms = retObj.StrValue
    End If
    
End Function

Public Function XYZAtomNums(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the Nx1 atomic numbers array or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZAtomNums = retObj.atomicNumsArray
    Else
        XYZAtomNums = retObj.StrValue
    End If
    
End Function

Public Function XYZAtomSyms(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the Nx1 atomic symbols array or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZAtomSyms = retObj.atomicSymsArray
    Else
        XYZAtomSyms = retObj.StrValue
    End If
    
End Function

Public Function XYZComments(ByVal path As Variant) As Variant
    ' Retrieve memoized .xyz and return the Nx1 text comments array or
    '  string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZComments = retObj.commentsArray
    Else
        XYZComments = retObj.StrValue
    End If
    
End Function

Public Function XYZSingleGeom(ByVal path As Variant, gNum As Long) As Variant
    ' Retrieve memoized .xyz and return the specified 3Nx1 geometry at the
    '  specified index, or string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object, iter As Long
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZSingleGeom = retObj.singleGeometry(gNum)
    Else
        XYZSingleGeom = retObj.StrValue
    End If
    
End Function

Public Function XYZDistance(ByVal path As Variant, gNum As Long, _
                            atom1 As Long, atom2 As Long) As Variant
    ' Retrieve memoized .xyz and return the distance between the two atoms
    '  specified, from the indicated geometry; or string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object, iter As Long
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZDistance = retObj.atomDistance(gNum, atom1, atom2)
    Else
        XYZDistance = retObj.StrValue
    End If
    
End Function

Public Function XYZDisplacement(ByVal path As Variant, gNum As Long, _
                            atomFrom As Long, atomTo As Long) As Variant
    ' Retrieve memoized .xyz and return the displacment vector between
    '  the two atoms specified, from the indicated geometry; or string error value.
    
    ' Set volatile status per global flag
    Application.Volatile ThisWorkbook.VOLATILE_FLAG
    
    Dim retObj As Object, iter As Long
    
    ' Bind the object
    Set retObj = mXYZ.IMemoized_memoItem(dearrayify(path))
    If TypeOf retObj Is ORCA_XYZ Then
        XYZDisplacement = retObj.atomDisplacement(gNum, atomFrom, atomTo)
    Else
        XYZDisplacement = retObj.StrValue
    End If
    
End Function

Function flushMemoXYZ() As Variant
    ' Returns string describing results of flush attempt
    '  on the XYZ memoizer object
    
    ' Enable local error handling
    On Error Resume Next
    
    ' Try to flush the memo dict
    mXYZ.IMemoized_flushMemo
    
    ' Check the error status and define the return string accordingly
    If Err.Number = 0 Then
        flushMemoXYZ = "SUCCESS"
    Else
        flushMemoXYZ = "FAILED: RTE #" & Err.Number & "(" & _
                            Err.Description & ")"
    End If
    
    ' Clear the error state and resume normal exception handling
    Err.Clear
    On Error GoTo 0
    
End Function

